syntax = "proto3";

import "gRPC/common.proto";
option go_package = "oauth-server/grpc/user/user_grpc";

package user_grpc;

service UserRoute {
    rpc GetUserById(GetUserByIdParams) returns (UserResponse) {}
    rpc GetUserByFilter(GetUserByFilterParams) returns (UserResponse) {}
    rpc GetUsersByFilter(GetUserByFilterParams) returns (UsersResponse) {}

    rpc BulkCreateUsers(stream FileChunk) returns (UploadResponse) {}
}

// ----------------------- Params -----------------------
message GetUserByIdParams {
    string id = 1;
}

message GetUserByFilterParams {
    optional int32 limit = 1;
    optional int32 offset = 2;

    optional string phoneNumber = 3;
    optional string id = 4;
    optional string email = 5;
    
    repeated string phoneNumbers = 6;
    repeated string ids = 7;
    repeated string emails = 8; 
}

message FileChunk {
    bytes content = 1;
}

// ----------------------- Response -----------------------
message UserResponse {
    bool success = 1;
    UserDetail data = 2;
    common_grpc.ErrorResponse error = 3;
}

message UserDetail {
    string id = 1;
    optional string phoneNumber = 2;
    optional string email = 3;
}

message UsersResponse {
    bool success = 1;
    repeated UserDetail data = 2;
    common_grpc.ErrorResponse error = 3;
}
  
message UploadResponse {
    bool success = 1;
    common_grpc.ErrorResponse error = 2;
}
